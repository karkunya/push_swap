import subprocess
import re
from subprocess import CompletedProcess
from typing import Union, List, IO, Dict, Iterable, Tuple
from random import shuffle
import statistics
from color import colorize


def bash(
            command: Union[str, List[str]],
            *,
            echo: bool = True,
            stdout: Union[None, int, IO] = None,
            stderr: Union[None, int, IO] = None,
            capture_output: bool = True
        ) -> CompletedProcess:
    if echo:
        if isinstance(command, str):
            print(command)
        else:
            print(' '.join(command))

    options: Dict = {}
    if stdout is None and stderr is None:
        options['capture_output'] = capture_output
    else:
        options['stdout'] = stdout
        options['stderr'] = stderr

    process = subprocess.run(command, **options)
    # sys.stderr.buffer.write(process.stderr)
    return process


class unique_element:
    def __init__(self, value, occurrences):
        self.value = value
        self.occurrences = occurrences


def perm_unique(elements):
    eset = set(elements)
    listunique = [unique_element(i, elements.count(i)) for i in eset]
    u = len(elements)
    return perm_unique_helper(listunique, [0]*u, u-1)


def perm_unique_helper(listunique, result_list, d):
    if d < 0:
        yield tuple(result_list)
    else:
        for i in listunique:
            if i.occurrences > 0:
                result_list[d] = i.value
                i.occurrences -= 1
                for g in perm_unique_helper(listunique, result_list, d-1):
                    yield g
                i.occurrences += 1


# g_stack = [4, 67, 3, 87, 23]
g_stack = list(range(1, 500))

stacks = [
[881, 257, 626, 654, 914, 62, 200, 989, 714, 555, 500, 73, 501, 129, 345, 854, 74, 428, 326, 827, 852, 475, 362, 717, 776, 340, 491, 861, 591, 490, 920, 11, 882, 683, 582, 370, 347, 603, 759, 560, 152, 10, 261, 924, 813, 705, 646, 613, 877, 473, 686, 961, 14, 210, 384, 596, 739, 559, 674, 601, 678, 713, 373, 578, 450, 294, 342, 587, 327, 167, 107, 116, 906, 204, 67, 941, 89, 122, 337, 344, 496, 154, 359, 867, 523, 784, 978, 832, 187, 586, 592, 425, 957, 985, 333, 456, 579, 792, 166, 948],
[878, 939, 181, 779, 459, 12, 49, 740, 507, 577, 55, 468, 623, 943, 644, 437, 428, 173, 176, 633, 912, 625, 125, 364, 920, 17, 11, 509, 497, 314, 374, 732, 669, 934, 184, 475, 572, 300, 356, 402, 393, 619, 946, 283, 819, 329, 879, 881, 236, 105, 734, 48, 789, 501, 70, 842, 204, 478, 461, 244, 180, 30, 420, 423, 849, 52, 969, 830, 750, 337, 588, 716, 540, 549, 47, 856, 346, 392, 954, 854, 798, 831, 736, 298, 349, 754, 15, 324, 983, 69, 117, 995, 273, 339, 801, 500, 430, 45, 784, 294],
[651, 351, 860, 645, 865, 212, 438, 309, 889, 78, 170, 60, 594, 392, 178, 164, 812, 394, 335, 483, 456, 318, 217, 56, 650, 295, 378, 13, 133, 982, 749, 968, 686, 546, 851, 842, 427, 498, 558, 482, 990, 687, 128, 332, 825, 418, 25, 717, 168, 150, 529, 434, 667, 584, 15, 488, 883, 433, 938, 913, 786, 776, 725, 162, 646, 991, 910, 639, 539, 7, 905, 117, 247, 24, 494, 424, 22, 903, 365, 194, 135, 2, 796, 897, 613, 360, 443, 673, 719, 452, 887, 353, 248, 26, 252, 241, 195, 263, 449, 919],
[645, 784, 202, 164, 929, 109, 264, 649, 301, 485, 367, 276, 707, 39, 716, 666, 37, 512, 780, 416, 951, 355, 478, 552, 48, 725, 8, 399, 200, 664, 746, 258, 602, 153, 62, 811, 578, 84, 165, 494, 349, 146, 158, 808, 948, 991, 545, 838, 898, 51, 791, 995, 344, 74, 212, 750, 895, 846, 350, 379, 785, 320, 726, 577, 496, 992, 382, 979, 620, 606, 530, 859, 173, 1, 643, 551, 798, 343, 233, 732, 667, 20, 194, 291, 243, 872, 116, 397, 88, 942, 423, 360, 847, 268, 242, 515, 626, 665, 404, 825],
[358, 242, 188, 496, 601, 198, 199, 935, 675, 712, 184, 865, 62, 428, 491, 725, 619, 857, 152, 962, 890, 382, 444, 770, 449, 411, 208, 584, 195, 818, 224, 335, 130, 145, 413, 409, 989, 668, 170, 220, 153, 39, 264, 949, 179, 249, 462, 615, 330, 987, 21, 452, 937, 425, 83, 99, 902, 607, 762, 399, 269, 486, 253, 757, 291, 109, 576, 12, 366, 10, 267, 527, 555, 418, 324, 310, 321, 303, 237, 359, 676, 353, 978, 633, 529, 747, 498, 772, 509, 506, 351, 743, 713, 838, 68, 77, 700, 502, 528, 550],
[355, 900, 87, 453, 137, 23, 727, 807, 86, 954, 448, 817, 520, 74, 665, 72, 590, 280, 438, 573, 284, 719, 946, 733, 914, 189, 251, 457, 31, 621, 546, 165, 397, 939, 652, 556, 610, 650, 519, 326, 70, 637, 794, 52, 151, 521, 940, 146, 298, 547, 24, 824, 993, 83, 234, 636, 955, 168, 668, 675, 517, 777, 682, 544, 495, 95, 266, 814, 618, 93, 157, 913, 945, 780, 937, 878, 247, 489, 135, 978, 997, 477, 60, 977, 378, 210, 677, 749, 379, 849, 952, 443, 141, 819, 419, 792, 905, 159, 308, 655],
[708, 410, 219, 698, 72, 249, 455, 519, 445, 366, 190, 705, 393, 729, 983, 33, 854, 428, 347, 921, 167, 360, 140, 896, 588, 474, 454, 825, 142, 649, 82, 916, 371, 989, 614, 498, 417, 129, 801, 735, 392, 200, 774, 34, 132, 164, 732, 508, 345, 982, 127, 253, 66, 680, 44, 660, 547, 738, 111, 992, 220, 259, 585, 544, 484, 295, 969, 173, 565, 603, 104, 587, 286, 289, 432, 701, 448, 263, 330, 782, 30, 426, 155, 304, 748, 10, 324, 250, 441, 807, 522, 143, 151, 4, 223, 368, 546, 383, 804, 84],
[969, 676, 237, 259, 837, 649, 754, 231, 519, 344, 424, 69, 790, 685, 882, 423, 324, 80, 247, 500, 174, 472, 698, 976, 858, 93, 263, 943, 210, 906, 393, 604, 78, 806, 297, 655, 947, 870, 378, 445, 314, 582, 170, 570, 843, 986, 924, 771, 433, 742, 781, 462, 600, 759, 606, 283, 178, 603, 899, 852, 430, 98, 965, 791, 942, 848, 537, 728, 865, 553, 184, 44, 526, 929, 792, 581, 507, 97, 216, 409, 471, 585, 624, 18, 949, 206, 596, 799, 41, 574, 405, 147, 15, 24, 224, 501, 927, 280, 982, 326],
[434, 198, 727, 548, 650, 403, 14, 653, 780, 588, 69, 387, 285, 234, 252, 415, 325, 275, 201, 831, 310, 581, 202, 154, 793, 371, 376, 757, 356, 84, 717, 160, 724, 944, 516, 39, 339, 288, 287, 762, 919, 364, 680, 517, 805, 895, 413, 113, 380, 209, 330, 771, 341, 296, 17, 542, 122, 887, 923, 184, 931, 314, 197, 899, 219, 272, 559, 855, 881, 344, 772, 298, 238, 361, 260, 511, 558, 562, 509, 754, 840, 768, 424, 824, 151, 281, 382, 211, 508, 56, 827, 959, 90, 111, 878, 644, 807, 478, 448, 561],
[620, 887, 575, 985, 185, 719, 221, 484, 528, 9, 47, 176, 794, 855, 908, 540, 120, 521, 681, 703, 68, 576, 590, 130, 573, 833, 413, 956, 16, 388, 867, 563, 980, 952, 382, 159, 351, 3, 498, 853, 309, 687, 505, 344, 85, 602, 317, 580, 866, 995, 642, 542, 823, 444, 804, 445, 422, 520, 689, 744, 515, 768, 920, 558, 644, 229, 513, 438, 670, 75, 136, 917, 554, 777, 814, 408, 587, 941, 721, 999, 279, 195, 468, 368, 493, 239, 640, 512, 944, 226, 624, 965, 939, 771, 410, 463, 305, 577, 260, 220],
[434, 196, 74, 157, 693, 525, 613, 800, 553, 105, 320, 253, 348, 726, 949, 819, 617, 76, 633, 59, 387, 746, 522, 233, 119, 651, 144, 857, 505, 409, 727, 983, 84, 397, 193, 217, 68, 581, 465, 110, 412, 306, 211, 507, 93, 418, 441, 509, 487, 666, 615, 675, 868, 833, 668, 439, 587, 818, 141, 690, 295, 636, 137, 881, 974, 561, 401, 761, 341, 787, 794, 381, 131, 225, 796, 45, 795, 161, 121, 95, 314, 906, 642, 261, 662, 790, 551, 707, 885, 952, 227, 603, 92, 783, 460, 918, 534, 169, 596, 272],
[771, 532, 502, 191, 451, 322, 928, 85, 702, 109, 792, 939, 872, 139, 806, 302, 237, 654, 230, 521, 56, 419, 805, 661, 211, 317, 209, 902, 444, 845, 213, 822, 452, 118, 40, 834, 761, 77, 296, 379, 889, 628, 70, 442, 898, 200, 921, 945, 815, 163, 747, 988, 691, 469, 437, 133, 566, 295, 337, 247, 513, 855, 587, 662, 110, 680, 830, 833, 462, 234, 446, 421, 893, 463, 780, 605, 522, 924, 490, 205, 590, 958, 75, 399, 724, 165, 558, 321, 814, 882, 141, 943, 480, 731, 365, 43, 279, 864, 879, 577],
[59, 274, 447, 23, 112, 587, 995, 88, 188, 371, 43, 96, 290, 732, 44, 160, 557, 352, 317, 845, 139, 723, 502, 288, 6, 440, 710, 897, 214, 237, 323, 835, 497, 63, 186, 419, 998, 852, 849, 263, 437, 658, 319, 854, 606, 880, 797, 183, 719, 885, 521, 918, 827, 580, 394, 189, 489, 982, 76, 638, 318, 379, 510, 199, 700, 40, 167, 18, 576, 883, 134, 985, 392, 834, 126, 305, 341, 11, 725, 895, 947, 153, 626, 399, 777, 311, 422, 929, 208, 356, 402, 608, 212, 678, 453, 702, 655, 133, 837, 942],
[879, 621, 432, 422, 99, 935, 201, 349, 467, 675, 897, 108, 114, 848, 500, 785, 337, 137, 127, 563, 755, 17, 857, 348, 343, 109, 439, 115, 300, 604, 925, 413, 719, 208, 386, 981, 595, 481, 502, 929, 30, 742, 887, 738, 854, 737, 121, 469, 453, 979, 168, 228, 830, 276, 302, 473, 220, 19, 912, 409, 96, 671, 327, 877, 551, 455, 919, 246, 704, 965, 170, 404, 858, 505, 870, 739, 7, 389, 945, 223, 689, 222, 130, 837, 626, 254, 635, 609, 148, 866, 596, 924, 922, 182, 8, 186, 340, 993, 519, 139],
[752, 296, 400, 301, 65, 340, 612, 518, 403, 512, 3, 68, 70, 125, 72, 18, 396, 367, 94, 55, 160, 662, 466, 860, 454, 348, 345, 316, 532, 568, 810, 936, 430, 856, 365, 250, 896, 260, 822, 172, 813, 102, 653, 278, 814, 552, 616, 510, 11, 265, 922, 504, 949, 913, 78, 141, 742, 320, 795, 19, 183, 85, 210, 836, 774, 699, 645, 794, 740, 741, 123, 251, 114, 650, 756, 725, 177, 955, 595, 49, 828, 247, 934, 969, 354, 967, 24, 865, 92, 393, 267, 387, 448, 804, 212, 113, 154, 694, 439, 994],
[607, 861, 759, 136, 92, 763, 510, 669, 851, 228, 47, 690, 314, 666, 597, 616, 932, 527, 289, 317, 281, 874, 363, 200, 728, 592, 51, 3, 116, 683, 309, 284, 978, 354, 454, 498, 922, 791, 27, 217, 584, 78, 208, 987, 598, 782, 516, 435, 287, 554, 920, 233, 656, 347, 16, 306, 483, 604, 736, 216, 361, 793, 624, 64, 428, 824, 419, 988, 351, 750, 282, 268, 542, 266, 270, 30, 579, 336, 143, 950, 560, 672, 707, 951, 989, 737, 148, 88, 459, 880, 105, 7, 424, 738, 384, 815, 188, 614, 933, 796],
[748, 318, 236, 630, 534, 304, 763, 173, 464, 518, 885, 647, 691, 707, 667, 950, 798, 810, 529, 541, 616, 659, 718, 512, 824, 170, 663, 268, 14, 110, 728, 594, 829, 391, 427, 380, 917, 756, 44, 813, 36, 807, 953, 333, 212, 551, 675, 169, 362, 447, 816, 347, 237, 519, 599, 703, 75, 485, 562, 626, 46, 216, 508, 803, 600, 499, 214, 493, 714, 793, 448, 610, 161, 384, 338, 298, 184, 172, 143, 474, 772, 224, 134, 706, 30, 29, 664, 860, 498, 287, 165, 253, 767, 405, 535, 936, 229, 897, 178, 279],
[842, 699, 473, 353, 405, 572, 666, 513, 665, 589, 298, 461, 413, 47, 890, 553, 249, 904, 287, 441, 508, 326, 468, 743, 320, 20, 219, 91, 814, 608, 274, 471, 11, 33, 209, 122, 847, 160, 810, 801, 870, 386, 987, 954, 26, 279, 942, 595, 435, 74, 403, 94, 922, 306, 724, 296, 522, 632, 962, 227, 295, 784, 426, 168, 144, 777, 648, 862, 732, 609, 317, 175, 490, 793, 849, 713, 635, 81, 880, 639, 477, 492, 887, 883, 55, 379, 795, 95, 252, 803, 944, 150, 341, 826, 751, 915, 240, 50, 991, 156],
[98, 681, 378, 129, 883, 432, 815, 254, 444, 442, 168, 710, 919, 295, 967, 454, 150, 572, 668, 352, 128, 485, 123, 317, 879, 761, 480, 921, 252, 970, 304, 13, 48, 634, 925, 233, 651, 790, 573, 297, 382, 616, 847, 776, 618, 672, 258, 751, 581, 867, 161, 791, 213, 795, 12, 907, 745, 962, 957, 237, 176, 591, 854, 498, 594, 145, 366, 311, 359, 829, 303, 117, 812, 322, 597, 715, 624, 273, 780, 863, 131, 893, 390, 220, 852, 895, 840, 194, 892, 835, 72, 153, 959, 984, 870, 620, 695, 758, 629, 287],
[589, 959, 954, 894, 771, 851, 907, 420, 684, 941, 394, 268, 537, 464, 164, 730, 77, 349, 688, 674, 861, 626, 510, 441, 818, 816, 924, 936, 456, 902, 583, 219, 484, 925, 931, 953, 355, 468, 409, 759, 497, 389, 667, 643, 431, 849, 501, 627, 237, 777, 375, 890, 86, 623, 577, 719, 440, 313, 134, 644, 843, 287, 787, 62, 395, 243, 945, 601, 459, 330, 532, 61, 163, 948, 284, 507, 846, 647, 564, 231, 23, 290, 67, 523, 921, 984, 774, 650, 987, 681, 362, 239, 927, 88, 499, 976, 832, 322, 255, 272],
[349, 869, 426, 338, 252, 213, 345, 689, 33, 715, 17, 58, 408, 144, 868, 113, 157, 818, 433, 314, 743, 673, 390, 414, 587, 330, 362, 48, 917, 887, 375, 477, 97, 344, 961, 578, 3, 709, 600, 166, 81, 538, 640, 774, 4, 88, 591, 821, 260, 361, 83, 605, 910, 915, 690, 543, 466, 500, 874, 656, 547, 740, 468, 39, 930, 946, 202, 461, 228, 235, 913, 557, 573, 351, 429, 806, 987, 242, 523, 566, 447, 248, 893, 846, 997, 927, 401, 25, 364, 159, 851, 225, 326, 838, 924, 111, 880, 71, 835, 527],
[438, 862, 353, 313, 522, 975, 680, 530, 880, 444, 224, 164, 861, 205, 598, 198, 38, 500, 466, 525, 203, 606, 708, 418, 799, 505, 481, 327, 213, 126, 662, 121, 704, 933, 930, 609, 828, 634, 703, 276, 771, 711, 843, 750, 898, 377, 765, 897, 385, 601, 501, 446, 382, 133, 153, 562, 246, 696, 758, 945, 772, 183, 557, 613, 307, 443, 11, 387, 210, 275, 131, 665, 720, 263, 91, 40, 628, 379, 421, 533, 23, 985, 390, 664, 961, 678, 475, 293, 411, 928, 70, 594, 196, 384, 903, 652, 722, 577, 159, 896],
[6, 12, 677, 476, 986, 511, 289, 321, 810, 478, 858, 649, 378, 659, 447, 601, 564, 115, 983, 131, 881, 34, 704, 512, 109, 612, 291, 924, 595, 459, 417, 583, 192, 222, 481, 676, 146, 261, 264, 870, 278, 215, 776, 877, 269, 915, 418, 651, 980, 91, 523, 20, 200, 900, 654, 723, 755, 722, 56, 725, 521, 36, 543, 8, 407, 777, 46, 485, 488, 856, 568, 715, 374, 24, 274, 356, 806, 83, 517, 294, 610, 263, 946, 566, 458, 726, 493, 81, 202, 650, 168, 193, 234, 671, 325, 51, 546, 627, 576, 33],
[100, 500, 348, 497, 532, 605, 817, 764, 417, 317, 352, 781, 300, 217, 76, 902, 422, 901, 774, 853, 598, 29, 57, 309, 53, 577, 471, 270, 692, 289, 815, 190, 483, 321, 461, 115, 122, 615, 79, 697, 575, 987, 970, 96, 810, 931, 525, 216, 857, 957, 134, 981, 508, 501, 176, 867, 891, 502, 271, 719, 22, 826, 398, 649, 534, 557, 148, 142, 979, 47, 388, 157, 642, 808, 37, 281, 811, 488, 585, 28, 837, 73, 818, 830, 472, 890, 637, 607, 521, 59, 756, 905, 132, 823, 64, 419, 701, 245, 49, 118],
[650, 996, 590, 496, 119, 317, 825, 704, 386, 647, 186, 325, 617, 807, 427, 827, 407, 646, 718, 796, 780, 680, 541, 19, 289, 262, 51, 988, 658, 660, 593, 10, 49, 759, 855, 360, 384, 428, 830, 167, 699, 869, 900, 562, 741, 503, 873, 270, 557, 993, 334, 756, 674, 190, 278, 311, 894, 722, 989, 667, 849, 878, 178, 707, 879, 631, 450, 444, 927, 140, 499, 634, 229, 929, 393, 645, 143, 411, 344, 871, 964, 66, 90, 367, 601, 884, 824, 616, 213, 791, 17, 596, 78, 146, 202, 110, 389, 946, 72, 371],
[967, 758, 343, 663, 118, 166, 11, 439, 836, 407, 304, 69, 437, 254, 413, 38, 746, 730, 753, 375, 83, 837, 868, 637, 52, 395, 757, 660, 851, 824, 920, 510, 935, 517, 303, 603, 952, 202, 487, 629, 538, 483, 874, 234, 354, 801, 793, 503, 295, 546, 448, 229, 212, 18, 383, 785, 246, 867, 717, 578, 490, 113, 744, 923, 247, 668, 776, 297, 364, 226, 24, 223, 485, 940, 959, 330, 319, 405, 636, 572, 192, 534, 724, 72, 888, 951, 542, 316, 163, 648, 635, 761, 644, 461, 101, 33, 502, 146, 143, 98],
[816, 759, 227, 182, 750, 626, 26, 242, 4, 803, 190, 357, 964, 382, 963, 81, 757, 601, 97, 489, 534, 79, 272, 850, 842, 296, 378, 835, 346, 848, 747, 173, 214, 689, 670, 894, 31, 100, 691, 673, 939, 583, 653, 756, 341, 768, 302, 871, 680, 131, 290, 373, 351, 624, 711, 843, 512, 245, 122, 303, 265, 834, 571, 78, 457, 849, 390, 240, 856, 118, 473, 754, 596, 595, 588, 927, 629, 376, 785, 249, 441, 720, 269, 879, 219, 864, 746, 593, 77, 875, 285, 592, 865, 783, 102, 724, 167, 62, 764, 13],
[261, 268, 671, 241, 630, 103, 856, 183, 6, 520, 970, 637, 982, 277, 107, 141, 936, 862, 979, 135, 366, 934, 460, 75, 707, 34, 441, 873, 161, 730, 119, 726, 774, 960, 857, 938, 742, 711, 20, 219, 23, 653, 709, 314, 397, 607, 542, 805, 489, 884, 700, 478, 136, 905, 170, 274, 533, 245, 823, 206, 284, 272, 663, 430, 506, 684, 315, 914, 120, 491, 25, 657, 877, 631, 795, 868, 398, 444, 556, 863, 158, 72, 420, 603, 188, 12, 610, 258, 592, 231, 134, 487, 33, 737, 534, 765, 600, 344, 58, 278],
[633, 741, 436, 790, 594, 3, 641, 984, 887, 35, 924, 676, 33, 908, 977, 647, 994, 814, 205, 193, 463, 935, 510, 385, 664, 864, 164, 279, 257, 844, 454, 880, 359, 680, 823, 42, 742, 673, 561, 597, 658, 953, 657, 447, 811, 342, 547, 700, 956, 874, 958, 992, 648, 830, 368, 449, 335, 196, 175, 569, 194, 55, 859, 862, 819, 807, 428, 843, 198, 545, 377, 562, 511, 203, 712, 966, 209, 574, 679, 931, 329, 183, 941, 955, 531, 14, 567, 829, 207, 572, 255, 259, 503, 968, 294, 752, 607, 921, 747, 223],
[973, 14, 94, 791, 302, 258, 865, 16, 821, 741, 461, 801, 62, 81, 950, 945, 61, 985, 842, 637, 626, 280, 391, 136, 792, 277, 158, 939, 667, 889, 308, 491, 546, 324, 931, 591, 287, 360, 300, 53, 678, 419, 255, 457, 271, 981, 666, 87, 693, 196, 830, 621, 229, 547, 297, 852, 205, 51, 100, 544, 168, 315, 901, 673, 340, 701, 505, 367, 230, 846, 562, 816, 585, 823, 438, 526, 964, 321, 415, 649, 632, 840, 703, 753, 575, 239, 906, 487, 558, 199, 165, 170, 646, 386, 618, 593, 549, 588, 619, 63],
[201, 995, 887, 735, 553, 20, 193, 910, 946, 313, 222, 42, 620, 758, 770, 615, 627, 551, 955, 86, 404, 192, 818, 602, 224, 557, 907, 187, 65, 600, 687, 167, 465, 667, 811, 975, 411, 105, 177, 231, 154, 618, 147, 282, 879, 530, 516, 492, 656, 227, 606, 110, 597, 447, 10, 786, 239, 195, 678, 709, 76, 260, 762, 432, 319, 947, 912, 417, 684, 929, 813, 297, 135, 630, 952, 381, 183, 531, 673, 576, 601, 857, 882, 19, 585, 510, 271, 825, 635, 373, 643, 114, 362, 964, 765, 230, 120, 917, 686, 392],
[282, 672, 103, 256, 33, 943, 116, 788, 985, 839, 871, 373, 918, 279, 482, 165, 47, 680, 424, 794, 417, 168, 714, 546, 670, 928, 857, 35, 390, 431, 779, 158, 805, 302, 477, 3, 523, 437, 81, 849, 461, 499, 841, 187, 573, 389, 980, 230, 453, 277, 375, 149, 926, 719, 131, 587, 208, 37, 865, 224, 484, 741, 816, 166, 753, 693, 580, 403, 124, 884, 900, 597, 193, 847, 225, 772, 211, 191, 204, 907, 240, 320, 18, 563, 558, 716, 850, 846, 809, 897, 936, 78, 365, 579, 840, 958, 138, 41, 751, 404],
]

process = './cmake-build-debug/push_swap'
push_swap = process
checker = './cmake-build-debug/checker'


def test_stack(
    i: int,
    stack: Iterable[int],
    limit: int = 0
) -> Tuple[bool, int]:
    cmd_push_swap = bash(
        [
            'bash',
            '-c',
            ' '.join([push_swap, *(str(x) for x in stack)]) + ' > c.txt'
        ],
        echo=False
    )
    cmd_checker = bash(
        [
            'bash',
            '-c',
            ' '.join([checker, *(str(x) for x in stack)]) + ' < c.txt'
        ],
        echo=False
    )
    cmd_counter = bash(['wc', '-l', 'c.txt'], echo=False)
    count = int(cmd_counter.stdout.split(b' ')[0].decode().strip())
    result = cmd_checker.stdout.decode().strip()
    if 'OK' in result and (not limit or count <= limit):
        print(colorize(f"{i} {result} in {count} commands", fg='green'))
        is_ok = True
    else:
        print(colorize(f"{i} {result} in {count} commands", fg='red'))
        is_ok = False
    return is_ok, count


def get_limit(size: int):
    return {
        5:   12,
        100: 700,
        500: 5500,
    }.get(size, 0)


def test(count, *, size=100):
    limit = get_limit(size)
    peek = 0
    avg = 0
    alerts = 0
    cc_results = []
    stack = list(range(size))

    for i in range(count):
        shuffle(stack)
        # stack = g_stack[:size]
        # print(stack)
        is_ok, cc = test_stack(i + 1, stack, limit)
        avg += cc
        cc_results.append(cc)
        if cc > peek:
            peek = cc
        if not is_ok:
            print(stack)
            alerts += 1
    print('Average:', int(avg / count))
    print('Median: ', int(statistics.median(cc_results)))
    print('Peek:   ', peek)
    print("Total tests failed:", alerts)


def fight():
    i = 0
    size = 100
    limit = get_limit(size)
    for stack in stacks:
        i += 1
        # print(stack)
        test_stack(i, stack, limit)


def brute(size):
    limit = get_limit(size)
    i = 0
    peek = 0
    avg = 0
    alerts = 0
    cc_results = []
    for stack in perm_unique(list(range(size))):
        i += 1
        # print(stack)
        is_ok, cc = test_stack(i, stack, limit)
        avg += cc
        cc_results.append(cc)
        if cc > peek:
            peek = cc
        if not is_ok:
            print(stack)
            alerts += 1
    print('Average:', int(avg / len(cc_results)))
    print('Median: ', int(statistics.median(cc_results)))
    print('Peek:   ', peek)
    print("Total tests failed:", alerts)


# test(100, size=666)
# test(100000, size=100)
# fight()
brute(4)
